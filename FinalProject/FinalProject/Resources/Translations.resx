<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountOfPostcards" xml:space="preserve">
    <value>Amount of postcards</value>
  </data>
  <data name="AnErrorOccurredWhileProcessingYourRequest" xml:space="preserve">
    <value>An error occurred while processing your request</value>
  </data>
  <data name="AssociateYour_Account" xml:space="preserve">
    <value>Associate your {0} account</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="AverageRating" xml:space="preserve">
    <value>Average rating</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangeYourData" xml:space="preserve">
    <value>Change your data</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="CreateAPostcard" xml:space="preserve">
    <value>Create a postcard</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create a new account</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Facebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="ForFifteenHighRatings" xml:space="preserve">
    <value>For 15 high ratings</value>
  </data>
  <data name="ForFifteenLikes" xml:space="preserve">
    <value>For 15 likes</value>
  </data>
  <data name="ForFiveHighRatings" xml:space="preserve">
    <value>For 5 high ratings</value>
  </data>
  <data name="ForFiveLikes" xml:space="preserve">
    <value>For 5 likes</value>
  </data>
  <data name="ForTenHighRatings" xml:space="preserve">
    <value>For 10 high ratings</value>
  </data>
  <data name="ForTenLikes" xml:space="preserve">
    <value>For 10 likes</value>
  </data>
  <data name="GrayAndGreen" xml:space="preserve">
    <value>Gray and green</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="IncorrectFormat" xml:space="preserve">
    <value>{0} format is not correct</value>
  </data>
  <data name="InvalidLoginAttempt" xml:space="preserve">
    <value>Invalid login attempt</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogInUsingYour_Account" xml:space="preserve">
    <value>Log in using your {0} account</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Newest" xml:space="preserve">
    <value>Newest</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NewPasswordAndConfirmationPasswordDoNotMatch" xml:space="preserve">
    <value>New password and confirmation password do not match</value>
  </data>
  <data name="NoComments" xml:space="preserve">
    <value>No comments</value>
  </data>
  <data name="Oldest" xml:space="preserve">
    <value>Oldest</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordAndConfirmationPasswordDoNotMatch" xml:space="preserve">
    <value>Password and confirmation password do not match</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Popular" xml:space="preserve">
    <value>Popular</value>
  </data>
  <data name="Postcard" xml:space="preserve">
    <value>Postcard</value>
  </data>
  <data name="PostcardsWithTag" xml:space="preserve">
    <value>Postcards with tag</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterAuthenticatedAccount" xml:space="preserve">
    <value>You've successfully authenticated with {0}. Please enter an email for this site below and click the {1} button to finish logging in.</value>
  </data>
  <data name="Remember" xml:space="preserve">
    <value>Remember</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StringLengthError" xml:space="preserve">
    <value>{0} must be at least {2} characters long</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="TenLatelyAdded" xml:space="preserve">
    <value>10 lately added</value>
  </data>
  <data name="Themes" xml:space="preserve">
    <value>Themes</value>
  </data>
  <data name="ThereAreNoImageWithGivenId" xml:space="preserve">
    <value>There are no image with given id</value>
  </data>
  <data name="TopFive" xml:space="preserve">
    <value>Top 5</value>
  </data>
  <data name="Twitter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="UseALocalAccountToLogIn" xml:space="preserve">
    <value>Use a local account to log in</value>
  </data>
  <data name="UseAnotherServiceToLogIn" xml:space="preserve">
    <value>Use another service to log in</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserDoesNotExist" xml:space="preserve">
    <value>User doesn't exist</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Username is required</value>
  </data>
  <data name="VioletAndBeige" xml:space="preserve">
    <value>Violet and beige</value>
  </data>
  <data name="Vkontakte" xml:space="preserve">
    <value>VK</value>
  </data>
  <data name="YouDidNotEnterAnything" xml:space="preserve">
    <value>You didn't enter anything</value>
  </data>
  <data name="YouDidNotEnterHashTag" xml:space="preserve">
    <value>You didn't enter a hash tag</value>
  </data>
  <data name="YouDidNotEnterUserId" xml:space="preserve">
    <value>You didn't enter user's id</value>
  </data>
  <data name="YourComment" xml:space="preserve">
    <value>Your comment</value>
  </data>
  <data name="YourRatingWasSuccessfullyChanged" xml:space="preserve">
    <value>Your rating was successfully changed</value>
  </data>
  <data name="YouDidNotEnterPostcardId" xml:space="preserve">
    <value>You didn't enter postcard id</value>
  </data>
  <data name="ThereIsNoSuchHashTags" xml:space="preserve">
    <value>There is no such hashtags</value>
  </data>
</root>